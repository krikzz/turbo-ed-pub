;
; File generated by cc65 v 2.13.3
;
	.fopt		compiler,"cc65 v 2.13.3"
	.setcpu		"HUC6280"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_sysInit
	.import		_sysJoyRead
	.import		_gVsync
	.import		_gSetXY
	.import		_gCleanScreen
	.import		_gAppendChar
	.import		_gAppendString
	.import		_gAppendString_ML
	.import		_gAppendHex8
	.import		_gAppendHex32
	.import		_gAppendNum
	.import		_gConsPrint
	.import		_gConsPrintCX
	.import		_gAppendHex
	.import		_ed_init
	.import		_ed_fifo_rd
	.import		_ed_rx_next_rec
	.import		_ed_get_ticks
	.import		_ed_cmd_usb_wr
	.import		_ed_cmd_rom_path
	.import		_ed_cmd_status
	.import		_ed_cmd_file_open
	.import		_ed_cmd_file_close
	.import		_ed_cmd_file_read
	.import		_ed_cmd_file_read_mem
	.import		_ed_cmd_file_write
	.import		_ed_cmd_file_available
	.import		_ed_cmd_dir_load
	.import		_ed_cmd_dir_get_size
	.import		_ed_cmd_dir_get_recs
	.import		_ed_mem_rdd
	.export		_deviceID
	.export		_romPath
	.export		_romRead
	.export		_fileRead
	.export		_fileWrite
	.export		_fileToRom
	.export		_folderList
	.export		_sysTimer
	.export		_usbWrite
	.export		_usbRead
	.export		_main

.segment	"RODATA"

L0001:
	.byte	$45,$76,$65,$72,$44,$72,$69,$76,$65,$20,$49,$4F,$20,$73,$61,$6D
	.byte	$70,$6C,$65,$00,$00,$70,$72,$65,$73,$73,$20,$61,$6E,$79,$20,$6B
	.byte	$65,$79,$20,$77,$68,$65,$6E,$20,$72,$65,$61,$64,$79,$20,$74,$6F
	.byte	$20,$74,$65,$73,$74,$20,$75,$73,$62,$00,$64,$65,$76,$20,$49,$44
	.byte	$20,$20,$20,$3A,$20,$00,$64,$65,$76,$20,$6E,$61,$6D,$65,$20,$3A
	.byte	$20,$00,$54,$75,$72,$62,$6F,$20,$45,$76,$65,$72,$44,$72,$69,$76
	.byte	$65,$20,$50,$52,$4F,$00,$54,$75,$72,$62,$6F,$20,$45,$76,$65,$72
	.byte	$44,$72,$69,$76,$65,$20,$43,$4F,$52,$45,$00,$55,$6E,$6B,$6E,$6F
	.byte	$77,$6E,$00,$72,$6F,$6D,$20,$70,$61,$74,$68,$20,$3A,$20,$00,$72
	.byte	$6F,$6D,$20,$72,$65,$61,$64,$20,$3A,$20,$00,$65,$64,$74,$75,$72
	.byte	$62,$6F,$2F,$6D,$65,$6E,$75,$2E,$64,$61,$74,$00,$66,$69,$6C,$65
	.byte	$20,$72,$65,$61,$64,$3A,$20,$00,$66,$69,$6C,$65,$20,$73,$69,$7A
	.byte	$65,$3A,$20,$30,$78,$00,$66,$69,$6C,$65,$20,$77,$72,$69,$74,$65
	.byte	$2E,$2E,$2E,$00,$74,$65,$73,$74,$5F,$66,$69,$6C,$65,$2E,$74,$78
	.byte	$74,$00,$6F,$6B,$00,$72,$65,$61,$64,$20,$66,$69,$6C,$65,$20,$74
	.byte	$6F,$20,$72,$6F,$6D,$2E,$2E,$2E,$00,$65,$64,$74,$75,$72,$62,$6F
	.byte	$2F,$6D,$65,$6E,$75,$2E,$64,$61,$74,$00,$6F,$6B,$00,$00,$67,$65
	.byte	$74,$20,$66,$6F,$6C,$64,$65,$72,$20,$6C,$69,$73,$74,$2E,$2E,$2E
	.byte	$00,$65,$64,$74,$75,$72,$62,$6F,$00,$64,$69,$72,$20,$73,$69,$7A
	.byte	$65,$3A,$20,$00,$5B,$00,$5D,$00,$2E,$2E,$2E,$64,$69,$72,$00,$2E
	.byte	$2E,$2E,$66,$69,$6C,$65,$00,$00,$6F,$6E,$65,$20,$66,$72,$61,$6D
	.byte	$65,$20,$74,$69,$6D,$65,$3A,$20,$00,$6D,$73,$00,$73,$65,$6E,$64
	.byte	$20,$74,$65,$73,$74,$20,$73,$74,$72,$69,$6E,$67,$20,$74,$6F,$20
	.byte	$75,$73,$62,$2E,$2E,$2E,$00,$74,$65,$73,$74,$20,$73,$74,$72,$69
	.byte	$6E,$67,$0A,$00,$77,$61,$69,$74,$69,$6E,$67,$20,$66,$6F,$72,$20
	.byte	$69,$6E,$70,$75,$74,$20,$73,$74,$72,$69,$6E,$67,$20,$66,$72,$6F
	.byte	$6D,$20,$75,$73,$62,$2E,$2E,$2E,$00,$00,$00

.segment	"BSS"

_rom_path:
	.res	512,$00

; ---------------------------------------------------------------
; void __near__ deviceID (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_deviceID: near

.segment	"CODE"

	jsr     decsp4
	lda     sp
	ldx     sp+1
	jsr     pushax
	jsr     _ed_cmd_status
	lda     #<(L0001+58)
	ldx     #>(L0001+58)
	jsr     pushax
	jsr     _gConsPrint
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	jsr     _gAppendHex8
	lda     #<(L0001+70)
	ldx     #>(L0001+70)
	jsr     pushax
	jsr     _gConsPrint
	ldy     #$02
	lda     (sp),y
	cmp     #$20
	beq     L0037
	cmp     #$26
	beq     L003B
	bra     L003E
L0037:	lda     #<(L0001+82)
	ldx     #>(L0001+82)
	bra     L0116
L003B:	lda     #<(L0001+102)
	ldx     #>(L0001+102)
	bra     L0116
L003E:	lda     #<(L0001+123)
	ldx     #>(L0001+123)
L0116:	jsr     pushax
	jsr     _gAppendString
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ romPath (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_romPath: near

.segment	"CODE"

	lda     #<(_rom_path)
	ldx     #>(_rom_path)
	jsr     pushax
	lda     #$00
	jsr     pusha
	jsr     _ed_cmd_rom_path
	lda     #<(L0001+131)
	ldx     #>(L0001+131)
	jsr     pushax
	jsr     _gConsPrint
	lda     #<(_rom_path)
	ldx     #>(_rom_path)
	jsr     pushax
	lda     #$1B
	jsr     pusha
	jmp     _gAppendString_ML

.endproc

; ---------------------------------------------------------------
; void __near__ romRead (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_romRead: near

.segment	"CODE"

	ldy     #$0C
	jsr     subysp
	lda     #<(L0001+143)
	ldx     #>(L0001+143)
	jsr     pushax
	jsr     _gConsPrint
	ldx     #$00
	lda     #$10
	jsr     push0ax
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$0C
	jsr     push0ax
	jsr     _ed_mem_rdd
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$0C
	jsr     pusha0
	jsr     _gAppendHex
	ldy     #$0C
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ fileRead (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fileRead: near

.segment	"CODE"

	ldy     #$11
	jsr     subysp
	lda     #<(L0001+155)
	ldx     #>(L0001+155)
	jsr     pushax
	lda     #$01
	jsr     pusha
	jsr     _ed_cmd_file_open
	ldy     #$10
	sta     (sp),y
	lda     (sp),y
	bne     L0057
	tay
	jsr     _ed_cmd_file_available
	jsr     steax0sp
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$0C
	jsr     push0ax
	jsr     _ed_cmd_file_read
	ldy     #$10
	sta     (sp),y
	lda     (sp),y
	bne     L0057
	tay
	jsr     _ed_cmd_file_close
	ldy     #$10
	sta     (sp),y
	lda     (sp),y
	bne     L0057
	lda     #<(L0001+172)
	ldx     #>(L0001+172)
	jsr     pushax
	jsr     _gConsPrint
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	lda     #$0C
	jsr     pusha0
	jsr     _gAppendHex
	lda     #<(L0001+184)
	ldx     #>(L0001+184)
	jsr     pushax
	jsr     _gConsPrint
	jsr     ldeax0sp
	jsr     pusheax
	jsr     _gAppendHex32
L0057:	ldy     #$11
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ fileWrite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fileWrite: near

.segment	"RODATA"

L0077:
	.byte	$68
	.byte	$65
	.byte	$6C
	.byte	$6C
	.byte	$6F
	.byte	$20
	.byte	$74
	.byte	$65
	.byte	$78
	.byte	$74

.segment	"CODE"

	ldy     #$0B
	jsr     subysp
	ldy     #$09
L0082:	lda     L0077,y
	sta     (sp),y
	dey
	bpl     L0082
	lda     #<(L0001+198)
	ldx     #>(L0001+198)
	jsr     pushax
	jsr     _gConsPrint
	lda     #<(L0001+212)
	ldx     #>(L0001+212)
	jsr     pushax
	lda     #$0A
	jsr     pusha
	jsr     _ed_cmd_file_open
	ldy     #$0A
	sta     (sp),y
	lda     (sp),y
	bne     L0076
	lda     sp
	ldx     sp+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     push0ax
	jsr     _ed_cmd_file_write
	ldy     #$0A
	sta     (sp),y
	lda     (sp),y
	bne     L0076
	tay
	jsr     _ed_cmd_file_close
	ldy     #$0A
	sta     (sp),y
	lda     (sp),y
	bne     L0076
	lda     #<(L0001+226)
	ldx     #>(L0001+226)
	jsr     pushax
	jsr     _gAppendString
L0076:	ldy     #$0B
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ fileToRom (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fileToRom: near

.segment	"CODE"

	jsr     decsp5
	lda     #<(L0001+229)
	ldx     #>(L0001+229)
	jsr     pushax
	jsr     _gConsPrint
	lda     #<(L0001+249)
	ldx     #>(L0001+249)
	jsr     pushax
	lda     #$01
	jsr     pusha
	jsr     _ed_cmd_file_open
	ldy     #$04
	sta     (sp),y
	lda     (sp),y
	jne     incsp5
	tay
	jsr     _ed_cmd_file_available
	jsr     steax0sp
	ldx     #$00
	stz     sreg+1
	lda     #$02
	sta     sreg
	txa
	jsr     pusheax
	ldy     #$07
	jsr     ldeaxysp
	jsr     pusheax
	jsr     _ed_cmd_file_read_mem
	ldy     #$04
	sta     (sp),y
	lda     (sp),y
	jne     incsp5
	tay
	jsr     _ed_cmd_file_close
	ldy     #$04
	sta     (sp),y
	lda     (sp),y
	jne     incsp5
	lda     #<(L0001+266)
	ldx     #>(L0001+266)
	jsr     pushax
	jsr     _gAppendString
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; void __near__ folderList (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_folderList: near

.segment	"CODE"

	ldy     #$20
	jsr     subysp
	lda     sp
	ldx     sp+1
	ldy     #$1A
	jsr     staxysp
	lda     #<(L0001+269)
	ldx     #>(L0001+269)
	jsr     pushax
	jsr     _gConsPrint
	lda     #<(L0001+270)
	ldx     #>(L0001+270)
	jsr     pushax
	jsr     _gConsPrint
	lda     #<(L0001+289)
	ldx     #>(L0001+289)
	jsr     pushax
	lda     #$00
	jsr     pusha
	jsr     _ed_cmd_dir_load
	ldy     #$1F
	sta     (sp),y
	lda     (sp),y
	jne     L00AF
	lda     #$1D
	jsr     leaa0sp
	jsr     pushax
	jsr     _ed_cmd_dir_get_size
	lda     #<(L0001+297)
	ldx     #>(L0001+297)
	jsr     pushax
	jsr     _gAppendString
	ldy     #$1E
	jsr     ldaxysp
	jsr     axulong
	jsr     pusheax
	jsr     _gAppendNum
	jsr     push0
	ldy     #$22
	jsr     pushwysp
	lda     #$10
	jsr     pusha0
	jsr     _ed_cmd_dir_get_recs
	lda     #$00
	ldy     #$1C
L011A:	sta     (sp),y
	iny
	cmp     (sp),y
	lda     #$00
	iny
	sbc     (sp),y
	bcs     L00C9
	ldy     #$1C
	lda     (sp),y
	cmp     #$08
	bcs     L00C9
	lda     #$11
	jsr     leaa0sp
	jsr     pushax
	jsr     _ed_rx_next_rec
	ldy     #$1F
	sta     (sp),y
	lda     (sp),y
	bne     L00AF
	lda     #<(L0001+308)
	ldx     #>(L0001+308)
	jsr     pushax
	jsr     _gConsPrint
	ldy     #$1D
	jsr     pushwysp
	jsr     _gAppendString
	lda     #<(L0001+310)
	ldx     #>(L0001+310)
	jsr     pushax
	jsr     _gAppendString
	ldy     #$19
	lda     (sp),y
	beq     L00DD
	lda     #<(L0001+312)
	ldx     #>(L0001+312)
	bra     L0119
L00DD:	lda     #<(L0001+319)
	ldx     #>(L0001+319)
L0119:	jsr     pushax
	jsr     _gAppendString
	ldy     #$1C
	lda     (sp),y
	ina
	bra     L011A
L00C9:	lda     #<(L0001+327)
	ldx     #>(L0001+327)
	jsr     pushax
	jsr     _gConsPrint
L00AF:	ldy     #$20
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ sysTimer (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_sysTimer: near

.segment	"CODE"

	jsr     decsp3
	lda     #<(L0001+328)
	ldx     #>(L0001+328)
	jsr     pushax
	jsr     _gConsPrint
	ldy     #$00
	jsr     _gVsync
	ldy     #$00
	jsr     _ed_get_ticks
	jsr     stax0sp
	lda     #$00
	ldy     #$02
L011B:	sta     (sp),y
	cmp     #$0A
	bcs     L00ED
	ldy     #$00
	jsr     _gVsync
	ldy     #$02
	lda     (sp),y
	ina
	bra     L011B
L00ED:	ldy     #$00
	jsr     _ed_get_ticks
	sec
	sbc     (sp)
	pha
	txa
	ldy     #$01
	sbc     (sp),y
	tax
	pla
	jsr     stax0sp
	jsr     pushax
	lda     #$0A
	jsr     tosudiva0
	jsr     stax0sp
	jsr     axulong
	jsr     pusheax
	jsr     _gAppendNum
	lda     #<(L0001+345)
	ldx     #>(L0001+345)
	jsr     pushax
	jsr     _gAppendString
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ usbWrite (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_usbWrite: near

.segment	"CODE"

	lda     #<(L0001+348)
	ldx     #>(L0001+348)
	jsr     pushax
	jsr     _gConsPrint
	lda     #<(L0001+375)
	ldx     #>(L0001+375)
	jsr     pushax
	lda     #$0C
	jsr     pusha0
	jmp     _ed_cmd_usb_wr

.endproc

; ---------------------------------------------------------------
; void __near__ usbRead (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_usbRead: near

.segment	"CODE"

	jsr     decsp1
	lda     #<(L0001+388)
	ldx     #>(L0001+388)
	jsr     pushax
	jsr     _gConsPrint
	lda     #<(L0001+425)
	ldx     #>(L0001+425)
L011D:	jsr     pushax
	jsr     _gConsPrint
L0108:	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_rd
	lda     (sp)
	cmp     #$0A
	bne     L010E
	lda     #<(L0001+426)
	ldx     #>(L0001+426)
	bra     L011D
L010E:	lda     (sp)
	jsr     pusha
	jsr     _gAppendChar
	bra     L0108

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	ldy     #$00
	jsr     _sysInit
	ldy     #$00
	jsr     _ed_init
	lda     #<(L0001)
	ldx     #>(L0001)
	jsr     pushax
	jsr     _gConsPrintCX
	lda     #$00
	jsr     pusha
	lda     #$02
	jsr     pusha
	jsr     _gSetXY
	ldy     #$00
	jsr     _deviceID
	ldy     #$00
	jsr     _romPath
	ldy     #$00
	jsr     _romRead
	ldy     #$00
	jsr     _fileRead
	ldy     #$00
	jsr     _fileWrite
	ldy     #$00
	jsr     _fileToRom
	ldy     #$00
	jsr     _folderList
	ldy     #$00
	jsr     _sysTimer
	lda     #<(L0001+20)
	ldx     #>(L0001+20)
	jsr     pushax
	jsr     _gConsPrint
	lda     #<(L0001+21)
	ldx     #>(L0001+21)
	jsr     pushax
	jsr     _gConsPrint
L001E:	ldy     #$00
	jsr     _sysJoyRead
	cmp     #$00
	beq     L001E
	ldy     #$00
	jsr     _gCleanScreen
	ldy     #$00
	jsr     _usbWrite
	ldy     #$00
	jsr     _usbRead
L0024:	bra     L0024

.endproc


;
; File generated by cc65 v 2.13.3
;
	.fopt		compiler,"cc65 v 2.13.3"
	.setcpu		"HUC6280"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.import		_sysMemToReg
	.import		_sysRegToMem
	.import		_sys_mem_to_reg_asm
	.importzp	_zp_cmd
	.importzp	_zp_src
	.importzp	_zp_dst
	.importzp	_zp_len
	.export		_ed_init
	.export		_ed_fifo_busy
	.export		_ed_fifo_rd
	.export		_ed_fifo_wr
	.export		_ed_check_status
	.export		_ed_tx_string
	.export		_ed_rx_string
	.export		_ed_rx_next_rec
	.export		_ed_get_ticks
	.export		_ed_app_start
	.export		_ed_cmd_rapp_set
	.export		_ed_cmd_rapp_cln
	.export		_ed_cmd_cd_mount
	.export		_ed_cmd_sys_inf
	.export		_ed_cmd_sub_status
	.export		_ed_cmd_get_vdc
	.export		_ed_set_mem_addr
	.export		_ed_cmd_bram_save
	.export		_ed_cmd_game_ctr
	.export		_ed_cmd_fpga_init
	.export		_ed_cmd_reboot
	.export		_ed_cmd_efu_unpack
	.export		_ed_cmd_efu_update
	.export		_ed_cmd_fla_wr_sdc
	.export		_ed_cmd_upd_exec
	.export		_ed_cmd_rtc_get
	.export		_ed_cmd_rtc_set
	.export		_ed_cmd_usb_wr
	.export		_ed_cmd_calc_filt
	.export		_ed_cmd_rom_path
	.export		_ed_cmd_tx
	.export		_ed_cmd_status
	.export		_ed_cmd_disk_init
	.export		_ed_cmd_file_open
	.export		_ed_cmd_file_close
	.export		_ed_cmd_file_read
	.export		_ed_cmd_file_read_mem
	.export		_ed_cmd_file_write
	.export		_ed_cmd_file_write_mem
	.export		_ed_cmd_file_copy
	.export		_ed_cmd_file_available
	.export		_ed_cmd_file_set_ptr
	.export		_ed_cmd_file_info
	.export		_ed_cmd_file_del
	.export		_ed_cmd_file_crc
	.export		_ed_cmd_file_seek_pat
	.export		_ed_cmd_dir_make
	.export		_ed_cmd_dir_load
	.export		_ed_cmd_dir_get_size
	.export		_ed_cmd_dir_seek_idx
	.export		_ed_cmd_dir_get_recs
	.export		_ed_cmd_mem_set
	.export		_ed_cmd_mem_test
	.export		_ed_cmd_mem_rd
	.export		_ed_cmd_mem_wr
	.export		_ed_cmd_mem_crc
	.export		_ed_mem_rdd
	.export		_ed_mem_wrd
	.import		_ed_init_asm
	.import		_ed_start_app_asm
	.import		_ed_fifo_rd_asm
	.import		_ed_cmd_tx_asm
	.export		_ed_fifo_rd_skip
	.export		_ed_min
	.export		_ed_rx_file_info
	.import		_ed_halt_asm
	.export		_ed_halt
	.export		_ed_run_dma
	.export		_ed_fifo_flush

; ---------------------------------------------------------------
; void __near__ ed_init (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_init: near

.segment	"BNK00"

	ldy     #$00
	jsr     _ed_init_asm
	jmp     _ed_fifo_flush

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_fifo_busy (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_fifo_busy: near

.segment	"BNK00"

	lda     $1FF2
	and     #$80
	beq     L0010
	ldx     #$00
	lda     #$01
	rts
L0010:	ldx     #$00
	txa
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ ed_fifo_rd (__near__ void*, unsigned short)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_fifo_rd: near

.segment	"BNK00"

L0015:	ldy     #$01
	lda     (sp),y
	ora     (sp)
	jeq     incsp4
	ldy     #$03
	jsr     ldaxysp
	sta     _zp_dst
	stx     _zp_dst+1
	jsr     ldax0sp
	sta     _zp_len
	stx     _zp_len+1
	cmp     #$01
	txa
	sbc     #$01
	bcc     L001C
	ldx     #$01
	stz     _zp_len
	stx     _zp_len+1
L001C:	ldy     #$00
	jsr     _ed_fifo_rd_asm
	ldy     #$01
	lda     (sp),y
	cmp     #$01
	bne     L0023
	lda     (sp)
	cmp     #$01
L0023:	jcc     incsp4
	ldx     #$01
	lda     #$00
	jsr     subeq0sp
	ldy     #$02
	ldx     #$01
	lda     #$00
	jsr     addeqysp
	bra     L0015

.endproc

; ---------------------------------------------------------------
; void __near__ ed_fifo_wr (__near__ void*, unsigned short)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_fifo_wr: near

.segment	"BNK00"

	lda     (sp)
	ldy     #$01
	ora     (sp),y
	jeq     incsp4
	ldy     #$03
	jsr     ldaxysp
	sta     _zp_src
	stx     _zp_src+1
	ldx     #$1F
	lda     #$F0
	sta     _zp_dst
	stx     _zp_dst+1
	jsr     ldax0sp
	sta     _zp_len
	stx     _zp_len+1
	ldy     #$00
	jsr     _sys_mem_to_reg_asm
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_check_status (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_check_status: near

.segment	"BNK00"

	jsr     decsp4
	lda     sp
	ldx     sp+1
	jsr     pushax
	jsr     _ed_cmd_status
	lda     (sp)
	cmp     #$5A
	beq     L0037
	ldx     #$00
	lda     #$40
	jmp     incsp4
L0037:	ldy     #$03
	ldx     #$00
	lda     (sp),y
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ ed_tx_string (__near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_tx_string: near

.segment	"BNK00"

	jsr     push0
	ldy     #$05
	jsr     pushwysp
L0040:	jsr     ldax0sp
	sta     regsave
	stx     regsave+1
	ina
	bne     L0043
	inx
L0043:	jsr     stax0sp
	lda     (regsave)
	beq     L0041
	ldy     #$03
	jsr     ldaxysp
	ina
	bne     L0045
	inx
L0045:	ldy     #$02
	jsr     staxysp
	bra     L0040
L0041:	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	lda     #$02
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$07
	jsr     pushwysp
	ldy     #$07
	jsr     pushwysp
	jsr     _ed_fifo_wr
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; void __near__ ed_rx_string (__near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_rx_string: near

.segment	"BNK00"

	jsr     decsp2
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$02
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldy     #$02
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L0050
	jsr     pushw0sp
	jsr     _ed_fifo_rd_skip
	jmp     incsp4
L0050:	jsr     ldax0sp
	clc
	ldy     #$02
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	lda     #$00
	sta     (ptr1)
	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	jsr     pushwysp
	jsr     _ed_fifo_rd
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_rx_next_rec (__near__ struct $anon-struct-0001*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_rx_next_rec: near

.segment	"BNK00"

	jsr     decsp1
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_rd
	lda     (sp)
	beq     L005F
	ldx     #$00
	lda     (sp)
	jmp     incsp3
L005F:	ldy     #$04
	jsr     pushwysp
	jsr     _ed_rx_file_info
	ldx     #$00
	txa
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; unsigned short __near__ ed_get_ticks (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_get_ticks: near

.segment	"BNK00"

	stz     $1FF4
	stz     $1FF4+1
	nop
	lda     $1FF4
	ldx     $1FF4+1
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ ed_app_start (__near__ struct $anon-struct-0002*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_app_start: near

	.import		_ed_halt_arg

.segment	"BNK00"

	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$01
	sta     sreg+1
	lda     #$F8
	jsr     pusheax
	lda     #$08
	jsr     push0ax
	lda     #$AA
	jsr     pusha
	lda     #$1A
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$05
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$01
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$0C
	jsr     pushwysp
	ldy     #$06
	jsr     pushwysp
	jsr     _ed_fifo_wr
	lda     #$02
	sta     _ed_halt_arg
	ldy     #$00
	jsr     _ed_start_app_asm
	ldy     #$0B
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_rapp_set (unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_rapp_set: near

.segment	"BNK00"

	lda     #$00
	jsr     pusha
	lda     #$2B
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$01
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	jsr     _ed_check_status
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_rapp_cln (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_rapp_cln: near

.segment	"BNK00"

	ldx     #$00
	txa
	jsr     push0ax
	ina
	jsr     pusha
	lda     #$2B
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$01
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_cd_mount (__near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_cd_mount: near

.segment	"BNK00"

	lda     #$21
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	jsr     _ed_tx_string
	jsr     _ed_check_status
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_sys_inf (__near__ struct $anon-struct-0006*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_sys_inf: near

.segment	"BNK00"

	lda     #$26
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	lda     #$40
	jsr     pusha0
	jsr     _ed_fifo_rd
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_sub_status (unsigned char)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_sub_status: near

.segment	"BNK00"

	jsr     decsp1
	lda     #$2C
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$01
	jsr     leaa0sp
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldx     #$00
	lda     (sp)
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_get_vdc (__near__ struct $anon-struct-0007*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_get_vdc: near

.segment	"BNK00"

	lda     #$13
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	lda     #$08
	jsr     pusha0
	jsr     _ed_fifo_rd
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ed_set_mem_addr (unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_set_mem_addr: near

.segment	"BNK00"

	lda     (sp)
	sta     $1FF8
	jsr     ldeax0sp
	stx     $1FF8
	jsr     ldeax0sp
	lda     sreg
	sta     $1FF8
	jsr     ldeax0sp
	lda     sreg+1
	sta     $1FF8
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_bram_save (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_bram_save: near

.segment	"BNK00"

	lda     #$2D
	jsr     pusha
	jsr     _ed_cmd_tx
	jmp     _ed_check_status

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_game_ctr (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_game_ctr: near

.segment	"BNK00"

	lda     #$27
	jsr     pusha
	jmp     _ed_cmd_tx

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_fpga_init (__near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_fpga_init: near

.segment	"BNK00"

	jsr     decsp5
	ldy     #$08
	jsr     pushwysp
	lda     #$01
	jsr     pusha
	jsr     _ed_cmd_file_open
	ldy     #$04
	sta     (sp),y
	lda     (sp),y
	beq     L00CD
	ldx     #$00
	lda     (sp),y
	jmp     incsp7
L00CD:	tay
	jsr     _ed_cmd_file_available
	jsr     steax0sp
	lda     #$1F
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$04
	jsr     pusha
	jsr     _ed_halt
	ldy     #$00
	jsr     _ed_fifo_flush
	jsr     _ed_check_status
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_reboot (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_reboot: near

.segment	"BNK00"

	lda     #$25
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$15
	jsr     pusha
	jmp     _ed_halt

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_efu_unpack (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_efu_unpack: near

.segment	"BNK00"

	lda     #$2E
	jsr     pusha
	jsr     _ed_cmd_tx
	jmp     _ed_check_status

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_efu_update (__near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_efu_update: near

.segment	"BNK00"

	lda     #$2F
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	jsr     _ed_tx_string
	jsr     _ed_check_status
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_fla_wr_sdc (unsigned long, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_fla_wr_sdc: near

.segment	"BNK00"

	lda     #$18
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	jsr     _ed_check_status
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_upd_exec (unsigned long, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_upd_exec: near

.segment	"BNK00"

	lda     #$28
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$15
	jsr     pusha
	jsr     _ed_halt
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_rtc_get (__near__ struct $anon-struct-000B*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_rtc_get: near

.segment	"BNK00"

	lda     #$14
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	lda     #$06
	jsr     pusha0
	jsr     _ed_fifo_rd
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_rtc_set (__near__ struct $anon-struct-000B*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_rtc_set: near

.segment	"BNK00"

	lda     #$15
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	lda     #$06
	jsr     pusha0
	jsr     _ed_fifo_wr
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_usb_wr (__near__ void*, unsigned short)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_usb_wr: near

.segment	"BNK00"

	lda     #$22
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$02
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	jsr     pushwysp
	jsr     _ed_fifo_wr
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_calc_filt (__near__ struct $anon-struct-0004*, __near__ struct $anon-struct-0003*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_calc_filt: near

.segment	"BNK00"

	lda     #$30
	jsr     pusha
	jsr     _ed_cmd_tx
	ldy     #$05
	jsr     pushwysp
	lda     #$0D
	jsr     pusha0
	jsr     _ed_fifo_wr
	jsr     pushw0sp
	lda     #$0A
	jsr     pusha0
	jsr     _ed_fifo_rd
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_rom_path (__near__ unsigned char*, unsigned char)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_rom_path: near

.segment	"BNK00"

	lda     #$31
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$04
	jsr     pushwysp
	jsr     _ed_rx_string
	jsr     _ed_check_status
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_tx (unsigned char)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_tx: near

.segment	"BNK00"

	ldy     #$00
	lda     (sp)
	sta     _zp_cmd
	jsr     _ed_cmd_tx_asm
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_status (__near__ void*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_status: near

.segment	"BNK00"

	lda     #$10
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_rd
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_disk_init (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_disk_init: near

.segment	"BNK00"

	lda     #$C0
	jsr     pusha
	jsr     _ed_cmd_tx
	jmp     _ed_check_status

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_open (__near__ unsigned char*, unsigned char)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_open: near

.segment	"BNK00"

	ldy     #$02
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	bne     L0168
	tax
	lda     #$41
	jmp     incsp3
L0168:	lda     #$C9
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$04
	jsr     pushwysp
	jsr     _ed_tx_string
	jsr     _ed_check_status
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_close (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_close: near

.segment	"BNK00"

	lda     #$CE
	jsr     pusha
	jsr     _ed_cmd_tx
	jmp     _ed_check_status

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_read (__near__ void*, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_read: near

.segment	"BNK00"

	jsr     decsp5
	ldy     #$0C
	jsr     pushwysp
L0179:	ldy     #$0A
	jsr     ldeaxysp
	jsr     utsteax
	beq     L017A
	ldx     #$02
	lda     #$00
	jsr     push0ax
	ldy     #$0E
	jsr     ldeaxysp
	jsr     pusheax
	jsr     _ed_min
	ldy     #$02
	jsr     steaxysp
	lda     #$CA
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldy     #$06
	lda     (sp),y
	beq     L0188
	ldx     #$00
	lda     (sp),y
	bra     L0177
L0188:	jsr     pushw0sp
	ldy     #$07
	jsr     pushwysp
	jsr     _ed_fifo_rd
	ldy     #$05
	jsr     ldeaxysp
	ldy     #$07
	jsr     lsubeqysp
	ldy     #$05
	jsr     ldeaxysp
	jsr     addeq0sp
	bra     L0179
L017A:	ldx     #$00
	txa
L0177:	ldy     #$0D
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_read_mem (unsigned long, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_read_mem: near

.segment	"BNK00"

	jsr     ldeax0sp
	jsr     pusheax
	ldx     #$00
	stz     sreg
	stz     sreg+1
	txa
	jsr     toseqeax
	beq     L0194
	ldx     #$00
	txa
	jmp     incsp8
L0194:	lda     #$CB
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	jsr     _ed_run_dma
	jsr     _ed_check_status
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_write (__near__ void*, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_write: near

.segment	"BNK00"

	jsr     decsp5
	ldy     #$0C
	jsr     pushwysp
	lda     #$CC
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$07
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
L01A8:	ldy     #$0A
	jsr     ldeaxysp
	jsr     utsteax
	beq     L01A9
	ldx     #$04
	lda     #$00
	jsr     push0ax
	ldy     #$0E
	jsr     ldeaxysp
	jsr     pusheax
	jsr     _ed_min
	ldy     #$02
	jsr     steaxysp
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldy     #$06
	lda     (sp),y
	beq     L01B2
	ldx     #$00
	lda     (sp),y
	bra     L01A1
L01B2:	jsr     pushw0sp
	ldy     #$07
	jsr     pushwysp
	jsr     _ed_fifo_wr
	ldy     #$05
	jsr     ldeaxysp
	ldy     #$07
	jsr     lsubeqysp
	ldy     #$05
	jsr     ldeaxysp
	jsr     addeq0sp
	bra     L01A8
L01A9:	jsr     _ed_check_status
L01A1:	ldy     #$0D
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_write_mem (unsigned long, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_write_mem: near

.segment	"BNK00"

	jsr     ldeax0sp
	jsr     pusheax
	ldx     #$00
	stz     sreg
	stz     sreg+1
	txa
	jsr     toseqeax
	beq     L01BE
	ldx     #$00
	txa
	jmp     incsp8
L01BE:	lda     #$CD
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	jsr     _ed_run_dma
	jsr     _ed_check_status
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_copy (__near__ unsigned char*, __near__ unsigned char*, unsigned char)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_copy: near

.segment	"BNK00"

	lda     #$D6
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$06
	jsr     pushwysp
	jsr     _ed_tx_string
	ldy     #$04
	jsr     pushwysp
	jsr     _ed_tx_string
	jsr     _ed_check_status
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; unsigned long __near__ ed_cmd_file_available (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_available: near

.segment	"BNK00"

	jsr     decsp8
	lda     #$D5
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$08
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldy     #$07
	jsr     ldeaxysp
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_set_ptr (unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_set_ptr: near

.segment	"BNK00"

	lda     #$CF
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	jsr     _ed_check_status
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_info (__near__ unsigned char*, __near__ struct $anon-struct-0001*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_info: near

.segment	"BNK00"

	jsr     decsp1
	lda     #$D0
	jsr     pusha
	jsr     _ed_cmd_tx
	ldy     #$06
	jsr     pushwysp
	jsr     _ed_tx_string
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_rd
	lda     (sp)
	beq     L01EE
	ldx     #$00
	lda     (sp)
	jmp     incsp5
L01EE:	ldy     #$04
	jsr     pushwysp
	jsr     _ed_rx_file_info
	ldx     #$00
	txa
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_del (__near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_del: near

.segment	"BNK00"

	lda     #$D3
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	jsr     _ed_tx_string
	jsr     _ed_check_status
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_crc (unsigned long, __near__ unsigned long*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_crc: near

.segment	"BNK00"

	jsr     decsp1
	lda     #$D1
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$03
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$04
	jsr     pushwysp
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldy     #$04
	jsr     pushwysp
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldx     #$00
	lda     (sp)
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_file_seek_pat (__near__ unsigned char*, unsigned char, unsigned long, __near__ unsigned long*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_file_seek_pat: near

.segment	"BNK00"

	jsr     decsp1
	lda     #$D8
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$03
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$07
	jsr     leaa0sp
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldy     #$04
	jsr     pushwysp
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldx     #$00
	lda     (sp)
	ldy     #$0A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_dir_make (__near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_dir_make: near

.segment	"BNK00"

	lda     #$D2
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	jsr     _ed_tx_string
	jsr     _ed_check_status
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_dir_load (__near__ unsigned char*, unsigned char)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_dir_load: near

.segment	"BNK00"

	lda     #$C5
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$04
	jsr     pushwysp
	jsr     _ed_tx_string
	jsr     _ed_check_status
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_dir_get_size (__near__ unsigned short*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_dir_get_size: near

.segment	"BNK00"

	lda     #$C6
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	lda     #$02
	jsr     pusha0
	jsr     _ed_fifo_rd
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_dir_seek_idx (__near__ unsigned short*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_dir_seek_idx: near

.segment	"BNK00"

	lda     #$D4
	jsr     pusha
	jsr     _ed_cmd_tx
	jsr     pushw0sp
	lda     #$02
	jsr     pusha0
	jsr     _ed_fifo_rd
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_dir_get_recs (unsigned short, unsigned short, unsigned short)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_dir_get_recs: near

.segment	"BNK00"

	lda     #$C8
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	lda     #$02
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	lda     #$02
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$02
	jsr     pusha0
	jsr     _ed_fifo_wr
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_mem_set (unsigned char, unsigned long, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_mem_set: near

.segment	"BNK00"

	lda     #$1B
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$08
	jsr     leaa0sp
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	jsr     _ed_run_dma
	ldy     #$09
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_cmd_mem_test (unsigned char, unsigned long, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_mem_test: near

.segment	"BNK00"

	jsr     decsp1
	lda     #$1C
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$05
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$01
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$09
	jsr     leaa0sp
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	jsr     _ed_run_dma
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldx     #$00
	lda     (sp)
	ldy     #$0A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_mem_rd (unsigned long, __near__ void*, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_mem_rd: near

.segment	"BNK00"

	lda     #$00
	jsr     pusha
	ldy     #$0A
	jsr     ldeaxysp
	cmp     #$00
	txa
	sbc     #$00
	lda     sreg
	sbc     #$80
	lda     sreg+1
	sbc     #$01
	bcs     L0264
	ldy     #$0A
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0C
	jsr     pushwysp
	ldy     #$0A
	jsr     ldeaxysp
	jsr     pusheax
	jsr     _ed_mem_rdd
	bra     L0262
L0264:	lda     #$19
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$07
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$01
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$0A
	jsr     ldeaxysp
	cmp     #$00
	txa
	sbc     #$00
	lda     sreg
	sbc     #$80
	lda     sreg+1
	sbc     #$01
	bcs     L0273
	jsr     _ed_run_dma
	bra     L0277
L0273:	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
L0277:	ldy     #$08
	jsr     pushwysp
	ldy     #$06
	jsr     pushwysp
	jsr     _ed_fifo_rd
L0262:	ldy     #$0B
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_mem_wr (unsigned long, __near__ void*, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_mem_wr: near

.segment	"BNK00"

	lda     #$00
	jsr     pusha
	jsr     decsp4
	ldy     #$0E
	jsr     ldeaxysp
	cmp     #$00
	txa
	sbc     #$00
	lda     sreg
	sbc     #$80
	lda     sreg+1
	sbc     #$01
	bcs     L0280
	ldy     #$0E
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$10
	jsr     pushwysp
	ldy     #$0E
	jsr     ldeaxysp
	jsr     pusheax
	jsr     _ed_mem_wrd
	jmp     L0288
L0280:	ldy     #$08
	jsr     ldeaxysp
	jsr     utsteax
	jeq     L0288
	ldy     #$0E
	jsr     ldeaxysp
	cmp     #$00
	txa
	sbc     #$00
	lda     sreg
	sbc     #$80
	lda     sreg+1
	sbc     #$01
	bcs     L028A
	lda     #$AA
	ldy     #$04
	sta     (sp),y
L028A:	ldy     #$08
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$04
	lda     #$00
	jsr     push0ax
	jsr     _ed_min
	jsr     steax0sp
	lda     #$1A
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$0B
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _ed_fifo_wr
	ldy     #$0C
	jsr     pushwysp
	ldy     #$05
	jsr     pushwysp
	jsr     _ed_fifo_wr
	ldy     #$04
	lda     (sp),y
	cmp     #$AA
	bne     L02A1
	jsr     _ed_run_dma
L02A1:	jsr     ldeax0sp
	ldy     #$09
	jsr     addeqysp
	jsr     ldeax0sp
	ldy     #$0B
	jsr     laddeqysp
	jsr     ldeax0sp
	ldy     #$05
	jsr     lsubeqysp
	jmp     L0280
L0288:	ldy     #$0F
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ ed_cmd_mem_crc (unsigned long, unsigned long, __near__ unsigned long*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_cmd_mem_crc: near

.segment	"BNK00"

	lda     #$1D
	jsr     pusha
	jsr     _ed_cmd_tx
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	jsr     pushw0sp
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_wr
	jsr     _ed_run_dma
	jsr     pushw0sp
	lda     #$04
	jsr     pusha0
	jsr     _ed_fifo_rd
	ldy     #$0A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ ed_mem_rdd (unsigned long, __near__ void*, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_mem_rdd: near

.segment	"BNK00"

	ldy     #$09
	jsr     ldeaxysp
	jsr     pusheax
	jsr     _ed_set_mem_addr
	ldx     #$1F
	lda     #$F6
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	ldy     #$07
	jsr     pushwysp
	jsr     _sysRegToMem
	ldy     #$0A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ ed_mem_wrd (unsigned long, __near__ void*, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_mem_wrd: near

.segment	"BNK00"

	ldy     #$09
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$00
	stz     sreg
	lda     #$80
	sta     sreg+1
	txa
	jsr     tosoreax
	jsr     pusheax
	jsr     _ed_set_mem_addr
	ldy     #$07
	jsr     pushwysp
	ldx     #$1F
	lda     #$F6
	jsr     pushax
	ldy     #$07
	jsr     pushwysp
	jsr     _sysMemToReg
	ldx     #$00
	txa
	jsr     push0ax
	jsr     _ed_set_mem_addr
	ldy     #$0A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ ed_fifo_rd_skip (unsigned short)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_fifo_rd_skip: near

.segment	"BNK00"

	jsr     decsp1
L012E:	ldy     #$02
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     decax1
	ldy     #$01
	jsr     staxysp
	lda     regsave
	ora     regsave+1
	beq     L012F
L0131:	lda     $1FF2
	and     #$80
	bne     L0131
	lda     $1FF0
	sta     (sp)
	bra     L012E
L012F:	tax
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; unsigned long __near__ ed_min (unsigned long, unsigned long)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_min: near

.segment	"BNK00"

	ldy     #$07
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$07
	jsr     ldeaxysp
	jsr     tosulteax
	beq     L013B
	ldy     #$07
	bra     L02CA
L013B:	ldy     #$03
L02CA:	jsr     ldeaxysp
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; void __near__ ed_rx_file_info (__near__ struct $anon-struct-0001*)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_rx_file_info: near

.segment	"BNK00"

	jsr     pushw0sp
	lda     #$09
	jsr     pusha0
	jsr     _ed_fifo_rd
	jsr     ldax0sp
	ldy     #$0A
	jsr     pushwidx
	jsr     _ed_rx_string
	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	ldy     #$08
	lda     (ptr1),y
	and     #$10
	sta     (ptr1),y
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ed_halt (unsigned char)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_halt: near

	.import		_ed_halt_arg

.segment	"BNK00"

	ldy     #$00
	lda     (sp)
	sta     _ed_halt_arg
	jsr     _ed_halt_asm
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ ed_run_dma (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_run_dma: near

.segment	"BNK00"

	lda     #$02
	jsr     pusha
	jmp     _ed_halt

.endproc

; ---------------------------------------------------------------
; void __near__ ed_fifo_flush (void)
; ---------------------------------------------------------------

.segment	"BNK00"

.proc	_ed_fifo_flush: near

.segment	"BNK00"

	jsr     decsp1
	stz     $1FF0
	nop
	stz     $1FF0
L0150:	lda     $1FF2
	and     #$80
	jne     incsp1
	lda     $1FF0
	sta     (sp)
	bra     L0150

.endproc

